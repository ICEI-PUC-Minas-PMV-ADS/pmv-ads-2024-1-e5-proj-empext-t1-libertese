@model Libertese.Domain.Entities.Cadastro.Funcionario
@{
    ViewData["Title"] = "Criar Funcionário";
    Layout = "~/Views/Shared/_LayoutWithoutHeader.cshtml";
}
<head>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link href="./scaffold/css/vendors/flatpickr.min.css" rel="stylesheet">
    <link href="./scaffold/style.css" rel="stylesheet">
    <link href="./output.css" rel="stylesheet">

    <style>
        body{
            
        }
        .box-create{   
            padding: auto;
            display: flex;
            flex-direction: column;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            align-items: center;
            justify-content: center;
            font-family: "Montserrat", sans-serif;
            font-weight: 500;
            font-size: 14px;
        }
        .input-nome{
            margin-bottom: 5px;
        }

        .input-horas {
            margin-bottom: 5px;
        }

        .input-dias {
            margin-bottom: 5px;
        }

        .input-cpf {
            margin-bottom: 5px;
        }

        .input-sexo {
            margin-bottom: 5px;
        }

        .input-email {
            margin-bottom: 5px;
        }

        .input-celular {
            margin-bottom: 5px;
        }

        .input-function {
            margin-bottom: 5px;
        }

        .input-pessoareclusa {
            margin-bottom: 5px;
        }
        .input-penitenciaria {
            margin-bottom: 5px;
        }

        .input-cursolibertese {
            margin-bottom: 5px;
        }

        .input-remuneracao {
            margin-bottom: 20px;
        }

        .input-salario {
            margin-bottom: 20px;
        }

        

        input[type="text"],
        input[type="email"],
        input[type="password"]
        input[type="submit"]
        input[type="select"]{
            font-family: "Montserrat", sans-serif;
            font-weight: 500;
            font-size: 14px;
            
        }

        .form-control{
            font-family: "Montserrat", sans-serif;
            font-weight: 500;
            font-size: 14px;
            border: 1px solid #000;
            background-color: rgba(220,220,220, 0.3);
        }
        .botao-create{
            align-items: center;
            justify-content: center;
            width: 200px;
            background-color:#000;
            border-radius: .25rem;
            display: inline-block;
            text-align: center;
        }
        .botoes{
            text-align: center;
        }

        .botao-voltar {
            align-items: center;
            justify-content: center;
            width: 200px;
            background-color: #D96704;
            border-radius: .25rem;
            display: inline-block;
            text-align: center;
        }

        .botao-voltar:hover {
            color: #fff;
            background-color: #808080;
            border-color: #808080;
        }

        .botao-create:hover {
            color: #fff;
            background-color: #808080;
            border-color: #808080;
        }

        input.form-sexo{
        font-family: "Montserrat", sans-serif;
        font-weight: 500;
        font-size: 14px;
        }
        .create-employee{
            width: 500px;
            
        }   
        .title-cadastro{
            font-family: "Montserrat", sans-serif;
            font-optical-sizing: auto;
            font-weight: 600;
            font-style: normal;
            font-size: 30px;
        }

        .botao-back{
            font-color: #000;
        }

        
    </style>
</head>
<body>
    <div class="box-create">
        <div class="title-cadastro">
            <h>Cadastro de funcionário</h>
            <br />
            <br />
        </div>
        <div class="create-employee">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-nome">
                    <label asp-for="Nome" class="control-label">Nome completo *</label>
                    <input asp-for="Nome" class="form-control input-nome" placeholder="Digite o nome" />
                    <span asp-validation-for="Nome" class="text-danger"></span>
                </div>
                <div class="form-horas">
                    <label asp-for="HorasDia" class="control-label">Horas de trabalho por dia *</label>
                    <input asp-for="HorasDia" class="form-control input-horas" placeholder="Horas de trabalho por dia" />
                    <span asp-validation-for="HorasDia" class="text-danger"></span>
                </div>
                <div class="form-dias">
                    <label asp-for="DiasMes" class="control-label">Dias de trabalho por mês *</label>
                    <input asp-for="DiasMes" class="form-control input-dias" placeholder="Dias de trabalho por mês" />
                    <span asp-validation-for="DiasMes" class="text-danger"></span>
                </div>
                <div class="form-cpf">
                    <label asp-for="Cpf" class="control-label">CPF *</label>
                    <input asp-for="Cpf" class="form-control input-cpf" placeholder="Digite o CPF" id="cpfInput" />
                    <span asp-validation-for="Cpf" class="text-danger"></span>
                </div>
                <div class="form-sexo">
                    <label asp-for="Sexo" class="control-label">Sexo *</label>
                    <select asp-for="Sexo" class="form-control input-sexo">
                        <option value="Feminino">Feminino</option>
                        <option value="Masculino">Masculino</option>
                        <option value="Não binário">Não binário</option>
                        <option value="Prefiro não informar">Prefiro não informar</option>
                    </select>
                    <span asp-validation-for="Sexo" class="text-danger"></span>
                </div>
                <div class="form-email">
                    <label asp-for="Email" class="control-label">E-mail *</label>
                    <input asp-for="Email" class="form-control input-email" placeholder="Example@something.com" id="email" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-celular">
                    <label asp-for="Celular" class="control-label">Celular *</label>
                    <input asp-for="Celular" class="form-control input-celular" placeholder="DDD + Número" />
                    <span asp-validation-for="Celular" class="text-danger"></span>
                </div>
                
                <div class="form-function">
                    <label asp-for="Function" class="control-label">Função na Libertese</label>
                    <select asp-for="Function" class="form-control input-function">
                        <option value="Costureira Nível 1">Costureira Nível 1</option>
                        <option value="Costureira Nível 3">Costureira Nível 3</option>
                        <option value="Coordenadora">Coordenadora</option>
                        <option value="Passadeira">Passadeira</option>
                        <option value="Arrematadeira">Arrematadeira</option>
                    </select>
                    <span asp-validation-for="Function" class="text-danger"></span>
                </div>
                <div class="form-pessoareclusa">
                    <label asp-for="Pessoareclusa" class="control-label">Pessoa reclusa ou regressa?</label>
                    <input class="input-pessoareclusa" type="checkbox" asp-for="Pessoareclusa" />
                    <span asp-validation-for="Pessoareclusa" class="text-danger"></span>
                </div>
                <div class="form-penitenciaria">
                    <label asp-for="Penitenciaria" class="control-label">Penitenciária *</label>
                    <input asp-for="Penitenciaria" class="form-control input-penitenciaria" placeholder="Digite o nome da penitenciária" />
                    <span asp-validation-for="Penitenciaria" class="text-danger"></span>
                </div>
                <div class="form-curso">
                    <label asp-for="CursoLibertese" class="control-label">Fez ou faz o curso da Libertese durante a reclusão?</label>
                    <input class="input-cursolibertese" type="checkbox" asp-for="CursoLibertese" />
                    <span asp-validation-for="CursoLibertese" class="text-danger"></span>
                </div>
                <div class="form-remuneracao">
                    <label asp-for="Remuneracao" class="control-label">Possui remuneração?</label>
                    <input class="input-remuneracao" type="checkbox" asp-for="Remuneracao" id="remuneracaoCheckbox" />
                    <span asp-validation-for="Remuneracao" class="text-danger"></span>
                </div>
                <div class="form-salario" id="salarioGroup">
                    <label asp-for="Salario" class="control-label">Salário *</label>
                    <input asp-for="Salario" class="form-control input-salario" id="salarioInput" placeholder="Digite o salário" />
                    <span asp-validation-for="Salario" class="text-danger"></span>
                </div>
                <div class="botoes">
                <div class="botao-create">
                    <input type="submit" value="Confirmar" class="btn btn-primary botao-create" id="botao-create" />
                </div>
                <div class="botao-voltar">
                    <input asp-action="Index" type="submit" value="Voltar" class="btn btn-primary botao-voltar" id="botao-voltar" />
                </div>
                </div>
            </form>
        </div>
    </div>

</body>

@section Scripts {
    <script>
        // Ocultar o campo de Salário inicialmente quando a página for carregada
        document.addEventListener('DOMContentLoaded', function () {
            var salarioGroup = document.getElementById('salarioGroup');
            salarioGroup.style.display = 'none';
        });

        // Adicionar o evento de mudança ao checkbox de "Possui remuneração"
        document.getElementById('remuneracaoCheckbox').addEventListener('change', function () {
            var salarioGroup = document.getElementById('salarioGroup');
            var salarioInput = document.getElementById('salarioInput');
            if (this.checked) {
                salarioGroup.style.display = 'block';
            } else {
                salarioGroup.style.display = 'none';
                salarioInput.value = 0; // Define o valor do Salário como 0 quando o checkbox não estiver marcado
            }
        });

        // Intercepta o envio do formulário
        document.querySelector('form').addEventListener('submit', function (event) {
            var salarioInput = document.getElementById('salarioInput');
            var cursoLiberteseCheckbox = document.getElementById('CursoLibertese');
            // Se o checkbox de "Possui remuneração" não estiver marcado, define o valor do Salário como 0
            if (!document.getElementById('remuneracaoCheckbox').checked) {
                salarioInput.value = 0;
            }
            // Verifica se o checkbox de "CursoLibertese" está marcado e define o valor como true se estiver
            if (cursoLiberteseCheckbox.checked) {
                cursoLiberteseCheckbox.value = true;
            }
            // Continua com o envio do formulário
            return true;
        });
        function formatarCPF(cpf) {
            // Remove qualquer caracter que não seja número
            cpf = cpf.replace(/\D/g, '');
            // Adiciona a formatação
            cpf = cpf.replace(/(\d{3})(\d)/, '$1.$2');
            cpf = cpf.replace(/(\d{3})(\d)/, '$1.$2');
            cpf = cpf.replace(/(\d{3})(\d{1,2})$/, '$1-$2');
            return cpf;
        }

        // Adiciona o evento de digitação ao campo de CPF
        document.getElementById('cpfInput').addEventListener('input', function (event) {
            var input = event.target;
            var cpf = input.value;
            // Formata o CPF enquanto o usuário digita
            input.value = formatarCPF(cpf);
        });

        document.querySelector('form').addEventListener('submit', function (event) {
            var cpfInput = document.getElementById('cpfInput');
            var cpf = cpfInput.value;
            // Verifica se o CPF está no formato correto
            if (!validarCPF(cpf)) {
                alert('Por favor, insira um CPF válido no formato XXX.XXX.XXX-XX.');
                // Impede o envio do formulário se o CPF não estiver no formato correto
                event.preventDefault();
            }
        });

        // Função para formatar o número de celular
        function formatarCelular(celular) {
            // Remove todos os caracteres que não são dígitos
            var cleaned = celular.replace(/\D/g, '');
            // Aplica a formatação (XX) XXXXX-XXXX
            var match = cleaned.match(/^(\d{0,2})(\d{0,5})(\d{0,4})$/);
            if (match) {
                // Concatena os grupos capturados com os separadores
                return (!match[2] ? match[1] : '(' + match[1] + ') ' + match[2]) + (match[3] ? '-' + match[3] : '');
            }
            return celular;
        }

        // Adiciona o evento de formatação ao campo de celular
        document.getElementById('Celular').addEventListener('input', function (event) {
            var celularInput = event.target;
            var formatted = formatarCelular(celularInput.value);
            // Atualiza o valor do campo com o número de celular formatado
            celularInput.value = formatted;
        });

        // Intercepta o envio do formulário para validar o número de celular
        document.querySelector('form').addEventListener('submit', function (event) {
            var botaoSubmit = document.activeElement;
            // Verifica se o botão clicado é o botão de criar (Confirmar)
            if (botaoSubmit && botaoSubmit.id === 'botao-create') {
                var celularInput = document.getElementById('Celular');
                var celular = celularInput.value.replace(/\D/g, ''); // Remove todos os caracteres que não são dígitos
                // Verifica se o número de celular possui 11 dígitos após a formatação
                if (celular.length !== 11) {
                    // Impede o envio do formulário
                    event.preventDefault();
                    // Exibe uma mensagem de erro
                    alert('Por favor, insira um número de celular válido no formato (XX) XXXXX-XXXX');
                }
            }
        });
    </script>
}
    




